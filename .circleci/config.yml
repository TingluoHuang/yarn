version: 2

docker_defaults: &docker_defaults
  docker:
    - image: yarnpkg/dev:latest
  working_directory: ~/project/yarn

macos_defaults: &macos_defaults
  macos:
    xcode: "9.0"
  working_directory: ~/project/yarn

attach_workspace: &attach_workspace
  attach_workspace:
      at: ~/project

install_steps: &install_steps
  steps:
    - checkout
    - *attach_workspace
    - restore_cache:
        name: Restore node_modules cache
        keys:
        # WARNING: add `{{ arch }}` into the keys below and separate the installation steps
        #          for Linux and macOS if you ever need platform-specific dependencies
        #          (anything using node-gyp etc.)
          - v2-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
          - v2-node-{{ .Branch }}-
          - v2-node-
    - run:
        name: Install Dependencies
        command: yarn install --frozen-lockfile
    - save_cache:
        name: Save node_modules cache
        key: v2-node-{{ .Branch }}-{{ checksum "yarn.lock" }}
        paths:
          - node_modules/
    - persist_to_workspace:
        root: ~/project
        paths:
          - yarn

test_build: &test_build
  run:
    name: Build Yarn for testing
    command: |
      if [ "$CIRCLE_BRANCH" == 'master' ]; then
        ./scripts/set-dev-version.js
      fi;
      yarn build

test_e2e_steps: &test_e2e_steps
  steps:
    - checkout
    - run:
        command: cd end_to_end_tests/data && ./run-ubuntu.sh


test_run: &test_run
  run:
    name: Tests
    command: |
      # Limit maxWorkers to 3 to avoid OOM on CircleCI
      yarn test-only --maxWorkers 3

test_steps: &test_steps
  steps:
    - *attach_workspace
    - *test_build
    - *test_run

pkg_tests_install: &pkg_tests_install
  run:
    name: Install the dependencies for the pkg-tests testsuite
    command: |
        ./bin/yarn --cwd packages/pkg-tests

pkg_tests_run: &pkg_tests_run
  run:
    name: Tests (pkg-tests testsuite)
    command: |
        ./bin/yarn --cwd packages/pkg-tests jest yarn.test.js

pkg_tests: &pkg_tests
  steps:
    - *attach_workspace
    - *test_build
    - *pkg_tests_install
    - *pkg_tests_run

default_filters: &default_filters
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  install:
    <<: *docker_defaults
    <<: *install_steps
  lint:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: Lint
          command: yarn lint
  build:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: Build distribution
          command: |
            if [ "$CIRCLE_BRANCH" == 'master' ]; then
              ./scripts/set-dev-version.js
            fi;
            yarn build-dist
            ./scripts/build-deb.sh
      - store_artifacts:
          path: artifacts/
          destination: yarnpkg
      - persist_to_workspace:
          root: ~/project
          paths:
            - yarn
#  test-pkg-tests-linux-node10:
#    <<: *docker_defaults
#    docker:
#      - image: node:10
#    <<: *pkg_tests
#  test-pkg-tests-linux-node8:
#    <<: *docker_defaults
#    <<: *pkg_tests
  test-linux-node10:
    <<: *docker_defaults
    <<: *test_steps

workflows:
  version: 2

  install-test-build-and-publish:
    jobs:
      - install:
          filters: *default_filters
      - lint:
          filters: *default_filters
          requires:
            - install
#      - test-pkg-tests-linux-node10:
#          filters: *default_filters
#          requires:
#            - install
#      - test-pkg-tests-linux-node8:
#          filters: *default_filters
#          requires:
#            - install
      - test-linux-node10:
          filters: *default_filters
          requires:
            - install
